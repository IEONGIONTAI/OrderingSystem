{"version":3,"sources":["constants.js","Store.js","styles.js","components/Logo.js","actions.js","screens/ChooseScreen.js","screens/HomeScreen.js","screens/OrderScreen.js","screens/QueueScreen.js","screens/ReviewScreen.js","screens/PaymentScreen.js","screens/AdminScreen.js","screens/SelectPaymentScreen.js","screens/CompleteOrderScreen.js","App.js","index.js"],"names":["CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_QUEUE_LIST_REQUEST","ORDER_QUEUE_LIST_SUCCESS","ORDER_QUEUE_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_ADD_ITEM","ORDER_REMOVE_ITEM","ORDER_CLEAR","ORDER_SET_TYPE","ORDER_SET_PAYMENT_TYPE","SCREEN_SET_WIDTH","Store","createContext","initialState","widthScreen","orderList","loading","queueList","categoryList","productList","order","orderItems","orderType","paymentType","taxPrice","totalPrice","itemsCount","orderCreate","reducer","state","action","type","payload","categories","error","products","queue","orders","newOrder","item","existItem","find","x","name","map","reduce","a","c","quantity","itemsPrice","price","Math","round","filter","StoreProvider","props","useReducer","value","dispatch","Provider","children","useStyles","makeStyles","theme","root","height","display","flexDirection","center","justifyContent","alignItems","textAlign","qrcode","weight","column","main","flex","overflow","color","navy","backgroundColor","green","footer","cards","red","bordered","borderWidth","borderRadius","margin","borderStyle","row","padding","space","around","between","largeButton","width","largeInput","fontSize","logo","largeLogo","title","marginTop","card","media","ready","processing","paper","avatar","spacing","palette","secondary","form","submit","Logo","styles","src","alt","className","large","listCategories","Axios","get","data","message","listProducts","categoryName","createOrder","post","setOrderType","setPaymentType","clearOrder","addToOrder","removeFromOrder","listQueue","listOrders","HomeScreen","useContext","chooseHandler","history","push","Fade","in","Box","Typography","gutterBottom","variant","component","Card","CardActionArea","onClick","CardMedia","image","CardContent","bold","OrderScreen","loadingProducts","errorProducts","useState","setCategoryName","setQuantity","isOpen","setIsOpen","product","setProduct","useEffect","categoryClickHandler","Dialog","onClose","open","fullWidth","maxWidth","DialogTitle","Button","disabled","e","TextField","inputProps","InputProps","bar","largeNumber","min","size","Grid","container","md","List","CircularProgress","Alert","severity","ListItem","button","category","Avatar","Slide","direction","cardFooter","length","QueueScreen","Helmet","Paper","inProgressOrders","number","servingOrders","ReviewScreen","orderItem","CompleteOrderScreen","AdminScreen","setOrderStateHandler","put","_id","alert","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","inProgress","isReady","isDelivered","selectHandler","QRCode","require","toString","createMuiTheme","typography","h1","fontWeight","h2","h3","primary","contrastText","App","basename","process","ThemeProvider","CssBaseline","Container","path","exact","ChooseScreen","SelectPaymentScreen","PaymentScreen","document","getElementById","render"],"mappings":"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","file":"static/js/main.45869301.chunk.js","sourcesContent":["export const CATEGORY_LIST_REQUEST = 'CATEGORY_LIST_REQUEST';\nexport const CATEGORY_LIST_SUCCESS = 'CATEGORY_LIST_SUCCESS';\nexport const CATEGORY_LIST_FAIL = 'CATEGORY_LIST_FAIL';\n\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\n\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\n\nexport const ORDER_QUEUE_LIST_REQUEST = 'ORDER_QUEUE_LIST_REQUEST';\nexport const ORDER_QUEUE_LIST_SUCCESS = 'ORDER_QUEUE_LIST_SUCCESS';\nexport const ORDER_QUEUE_LIST_FAIL = 'ORDER_QUEUE_LIST_FAIL';\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\n\nexport const ORDER_ADD_ITEM = 'ORDER_ADD_ITEM';\nexport const ORDER_REMOVE_ITEM = 'ORDER_REMOVE_ITEM';\nexport const ORDER_CLEAR = 'ORDER_CLEAR';\nexport const ORDER_SET_TYPE = 'ORDER_SET_TYPE';\nexport const ORDER_SET_PAYMENT_TYPE = 'ORDER_SET_PAYMENT_TYPE';\n\nexport const SCREEN_SET_WIDTH = 'SCREEN_SET_WIDTH';\n","import React, { createContext, useReducer } from 'react';\nimport useReducerWithThunk from 'use-reducer-thunk';\nimport {\n  ORDER_ADD_ITEM,\n  ORDER_REMOVE_ITEM,\n  ORDER_CLEAR,\n  CATEGORY_LIST_FAIL,\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  ORDER_SET_TYPE,\n  ORDER_SET_PAYMENT_TYPE,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_REQUEST,\n  SCREEN_SET_WIDTH,\n  ORDER_QUEUE_LIST_REQUEST,\n  ORDER_QUEUE_LIST_SUCCESS,\n  ORDER_QUEUE_LIST_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n} from './constants';\n\nexport const Store = createContext();\n\nconst initialState = {\n  widthScreen: false,\n  orderList: { loading: true },\n  queueList: { loading: true },\n  categoryList: { loading: true },\n  productList: { loading: true },\n  order: {\n    orderItems: [],\n    orderType: 'Eat in',\n    paymentType: 'Pay here',\n    taxPrice: 0,\n    totalPrice: 0,\n    itemsCount: 0,\n  },\n  orderCreate: { loading: true },\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case SCREEN_SET_WIDTH:\n      return {\n        ...state,\n        widthScreen: true,\n      };\n    case ORDER_SET_TYPE:\n      return {\n        ...state,\n        order: { ...state.order, orderType: action.payload },\n      };\n    case ORDER_SET_PAYMENT_TYPE:\n      return {\n        ...state,\n        order: { ...state.order, paymentType: action.payload },\n      };\n    case CATEGORY_LIST_REQUEST:\n      return { ...state, categoryList: { loading: true } };\n    case CATEGORY_LIST_SUCCESS:\n      return {\n        ...state,\n        categoryList: { loading: false, categories: action.payload },\n      };\n    case CATEGORY_LIST_FAIL:\n      return {\n        ...state,\n        categoryList: { loading: false, error: action.payload },\n      };\n    case PRODUCT_LIST_REQUEST:\n      return { ...state, productList: { loading: true } };\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        ...state,\n        productList: { loading: false, products: action.payload },\n      };\n    case PRODUCT_LIST_FAIL:\n      return {\n        ...state,\n        productList: { loading: false, error: action.payload },\n      };\n    case ORDER_QUEUE_LIST_REQUEST:\n      return { ...state, queueList: { loading: true } };\n    case ORDER_QUEUE_LIST_SUCCESS:\n      return {\n        ...state,\n        queueList: { loading: false, queue: action.payload },\n      };\n    case ORDER_QUEUE_LIST_FAIL:\n      return {\n        ...state,\n        queueList: { loading: false, error: action.payload },\n      };\n    case ORDER_LIST_REQUEST:\n      return { ...state, orderList: { loading: true } };\n    case ORDER_LIST_SUCCESS:\n      return {\n        ...state,\n        orderList: { loading: false, orders: action.payload },\n      };\n    case ORDER_LIST_FAIL:\n      return {\n        ...state,\n        orderList: { loading: false, error: action.payload },\n      };\n    case ORDER_CREATE_REQUEST:\n      return { ...state, orderCreate: { loading: true } };\n    case ORDER_CREATE_SUCCESS:\n      return {\n        ...state,\n        orderCreate: { loading: false, newOrder: action.payload },\n      };\n    case ORDER_CREATE_FAIL:\n      return {\n        ...state,\n        orderCreate: { loading: false, error: action.payload },\n      };\n    case ORDER_ADD_ITEM: {\n      const item = action.payload;\n      const existItem = state.order.orderItems.find(\n        (x) => x.name === item.name\n      );\n      const orderItems = existItem\n        ? state.order.orderItems.map((x) =>\n            x.name === existItem.name ? item : x\n          )\n        : [...state.order.orderItems, item];\n\n      const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\n      const itemsPrice = orderItems.reduce(\n        (a, c) => a + c.quantity * c.price,\n        0\n      );\n      const taxPrice = Math.round(0.15 * itemsPrice * 100) / 100;\n      const totalPrice = Math.round((itemsPrice) * 100) / 100;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          orderItems,\n          taxPrice,\n          totalPrice,\n          itemsCount,\n        },\n      };\n    }\n    case ORDER_REMOVE_ITEM:\n      const orderItems = state.order.orderItems.filter(\n        (x) => x.name !== action.payload.name\n      );\n      const itemsCount = orderItems.reduce((a, c) => a + c.quantity, 0);\n      const itemsPrice = orderItems.reduce(\n        (a, c) => a + c.quantity * c.price,\n        0\n      );\n      const taxPrice = Math.round(0.15 * itemsPrice * 100) / 100;\n      const totalPrice = Math.round((itemsPrice + taxPrice) * 100) / 100;\n      return {\n        ...state,\n        order: {\n          ...state.order,\n          orderItems,\n          taxPrice,\n          totalPrice,\n          itemsCount,\n        },\n      };\n\n    case ORDER_CLEAR:\n      return {\n        ...state,\n        order: {\n          orderItems: [],\n          taxPrice: 0,\n          totalPrice: 0,\n          itemsCount: 0,\n        },\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  //const [state, dispatch] = useReducerWithThunk(reducer, initialState, 'example');\n\n  const value = { state, dispatch };\n  return <Store.Provider value={value}>{props.children}</Store.Provider>;\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles((theme) => ({\n  // Common\n  root: {\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  qrcode:{\n    height: \"50vh\",\n    weight: \"50vh\",\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',  },\n  column: { flexDirection: 'column' },\n  main: {\n    flex: 1,\n    overflow: 'auto',\n    flexDirection: 'column',\n    display: 'flex',\n    color: '#ffffff',\n  },\n  navy: {\n    backgroundColor: '#003080',\n  },\n  green: {\n    backgroundColor: '#00b020',\n  },\n  footer: {},\n  // choose screen\n  cards: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // order screen\n  red: {\n    backgroundColor: '#ff2040',\n    color: '#ffffff',\n  },\n  bordered: {\n    borderWidth: 2,\n    borderRadius: 5,\n    margin: 5,\n    borderStyle: 'solid',\n  },\n  row: {\n    display: 'flex',\n    padding: 10,\n  },\n  space: {\n    padding: 10,\n  },\n  around: {\n    justifyContent: 'space-around',\n  },\n  between: {\n    justifyContent: 'space-between',\n  },\n  largeButton: {\n    width: 250,\n  },\n  largeInput: {\n    width: '60px!important',\n    padding: '0!important',\n    fontSize: '35px!important',\n    textAlign: 'center!important',\n  },\n\n  logo: {\n    height: 50,\n  },\n  largeLogo: {\n    height: 100,\n  },\n  title: {\n    marginTop: 18,\n  },\n  card: { margin: 10 },\n  media: { width: 200 },\n  ready: {\n    backgroundColor: '#003080',\n    color: '#ffffff',\n    marginTop: 0,\n  },\n  processing: {\n    backgroundColor: '#404040',\n    color: '#ffffff',\n    marginTop: 0,\n  },\n  // Signin/Signup\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n","import React from 'react';\nimport { useStyles } from '../styles';\n\nexport default function Logo(props) {\n  const styles = useStyles();\n  return (\n    <img\n      src=\"/images/logo.png\"\n      alt=\"Food Order\"\n      className={props.large ? styles.largeLogo : styles.logo}\n    ></img>\n  );\n}\n","import Axios from 'axios';\nimport {\n  CATEGORY_LIST_FAIL,\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  ORDER_ADD_ITEM,\n  ORDER_REMOVE_ITEM,\n  ORDER_CLEAR,\n  ORDER_SET_TYPE,\n  ORDER_SET_PAYMENT_TYPE,\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_QUEUE_LIST_REQUEST,\n  ORDER_QUEUE_LIST_SUCCESS,\n  ORDER_QUEUE_LIST_FAIL,\n  SCREEN_SET_WIDTH,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n} from './constants';\n\nexport const listCategories = async (dispatch) => {\n  dispatch({ type: CATEGORY_LIST_REQUEST });\n  try {\n    const { data } = await Axios.get('/api/categories');\n    return dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    return dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const listProducts = async (dispatch, categoryName = '') => {\n  dispatch({ type: PRODUCT_LIST_REQUEST });\n  try {\n    const { data } = await Axios.get(`/api/products?category=${categoryName}`);\n    return dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    return dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const createOrder = async (dispatch, order) => {\n  dispatch({ type: ORDER_CREATE_REQUEST });\n  try {\n    const { data } = await Axios.post('/api/orders', order);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n    dispatch({\n      type: ORDER_CLEAR,\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const setOrderType = async (dispatch, orderType) => {\n  return dispatch({\n    type: ORDER_SET_TYPE,\n    payload: orderType,\n  });\n};\nexport const setPaymentType = async (dispatch, paymentType) => {\n  return dispatch({\n    type: ORDER_SET_PAYMENT_TYPE,\n    payload: paymentType,\n  });\n};\nexport const clearOrder = async (dispatch) => {\n  return dispatch({\n    type: ORDER_CLEAR,\n  });\n};\n\nexport const addToOrder = async (dispatch, item) => {\n  return dispatch({\n    type: ORDER_ADD_ITEM,\n    payload: item,\n  });\n};\nexport const removeFromOrder = async (dispatch, item) => {\n  return dispatch({\n    type: ORDER_REMOVE_ITEM,\n    payload: item,\n  });\n};\n\nexport const listQueue = async (dispatch) => {\n  dispatch({ type: ORDER_QUEUE_LIST_REQUEST });\n  try {\n    const { data } = await Axios.get(`/api/orders/queue`);\n    dispatch({ type: SCREEN_SET_WIDTH });\n    return dispatch({\n      type: ORDER_QUEUE_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    return dispatch({\n      type: ORDER_QUEUE_LIST_FAIL,\n      payload: error.message,\n    });\n  }\n};\n\nexport const listOrders = async (dispatch) => {\n  dispatch({ type: ORDER_LIST_REQUEST });\n  try {\n    const { data } = await Axios.get(`/api/orders`);\n    dispatch({ type: SCREEN_SET_WIDTH });\n    return dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    return dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.message,\n    });\n  }\n};\n","import React, { useContext } from 'react';\n\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Fade,\n  Typography,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nimport { Store } from '../Store';\nimport { setOrderType } from '../actions';\nexport default function HomeScreen(props) {\n  const { dispatch } = useContext(Store);\n  const styles = useStyles();\n  const chooseHandler = (orderType) => {\n    setOrderType(dispatch, orderType);\n    props.history.push('/order');\n  };\n  return (\n    <Fade in={true}>\n      <Box className={[styles.root, styles.navy]}>\n        <Box className={[styles.main, styles.center]}>\n          <Logo large></Logo>\n          <Typography\n            className={styles.center}\n            gutterBottom\n            variant=\"h3\"\n            component=\"h3\"\n          >\n            請問您的取餐方式是?\n          </Typography>\n          <Box className={styles.cards}>\n            <Card className={[styles.card, styles.space]}>\n              <CardActionArea onClick={() => chooseHandler('Eat in')}>\n                <CardMedia\n                  component=\"img\"\n                  alt=\"Eat in\"\n                  image=\"./images/eatin.png\"\n                  className={styles.media}\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h4\"\n                    color=\"textPrimary\"\n                    component=\"p\"\n                  >\n                    堂食\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n            <Card className={[styles.card, styles.space]}>\n              <CardActionArea onClick={() => chooseHandler('Take out')}>\n                <CardMedia\n                  component=\"img\"\n                  alt=\"Take Out\"\n                  image=\"./images/takeout.png\"\n                  className={styles.media}\n                />\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h4\"\n                    color=\"textPrimary\"\n                    component=\"p\"\n                  >\n                    外帶自取\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Box>\n        </Box>\n      </Box>\n    </Fade>\n  );\n}\n","import React from 'react';\nimport { Box, Card, CardActionArea, Typography } from '@material-ui/core';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nexport default function HomeScreen(props) {\n  const styles = useStyles();\n  return (\n    <Card>\n      <CardActionArea onClick={() => props.history.push('/choose')}>\n        <Box className={[styles.root, styles.red]}>\n          <Box className={[styles.main, styles.center]}>\n            <Typography variant=\"h6\" component=\"h6\">\n            </Typography>\n            <Typography variant=\"h1\" component=\"h1\" className={styles.bold}>\n              裕豪小館<br/>\n              點餐系統\n            </Typography>\n            <TouchAppIcon fontSize=\"large\"></TouchAppIcon>\n          </Box>\n          <Box className={[styles.center, styles.green]}>\n            <Logo large />\n            <Typography variant=\"h5\" component=\"h5\" className={styles.footer}>\n              點擊以開始\n            </Typography>\n          </Box>\n        </Box>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport {\n  addToOrder,\n  clearOrder,\n  listCategories,\n  listProducts,\n  removeFromOrder,\n} from '../actions';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  CircularProgress,\n  Dialog,\n  DialogTitle,\n  Grid,\n  List,\n  ListItem,\n  Slide,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { Alert } from '@material-ui/lab';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nexport default function OrderScreen(props) {\n  const styles = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const { categories, loading, error } = state.categoryList;\n  const {\n    products,\n    loading: loadingProducts,\n    error: errorProducts,\n  } = state.productList;\n  const {\n    orderItems,\n    itemsCount,\n    totalPrice,\n    taxPrice,\n    orderType,\n  } = state.order;\n\n  const [categoryName, setCategoryName] = useState('');\n\n  const [quantity, setQuantity] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n  const [product, setProduct] = useState({});\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  const productClickHandler = (p) => {\n    setProduct(p);\n    setIsOpen(true);\n  };\n  const addToOrderHandler = () => {\n    addToOrder(dispatch, { ...product, quantity });\n    setIsOpen(false);\n  };\n  const cancelOrRemoveFromOrder = () => {\n    removeFromOrder(dispatch, product);\n    setIsOpen(false);\n  };\n  const previewOrderHandler = () => {\n    props.history.push(`/review`);\n  };\n  useEffect(() => {\n    if (!categories) {\n      listCategories(dispatch);\n    } else {\n      listProducts(dispatch, categoryName);\n    }\n  }, [categories, categoryName]);\n\n  const categoryClickHandler = (name) => {\n    setCategoryName(name);\n    listProducts(dispatch, categoryName);\n  };\n\n  return (\n    <Box className={styles.root}>\n      <Box className={styles.main}>\n        <Dialog\n          onClose={closeHandler}\n          aria-labelledby=\"max-width-dialog-title\"\n          open={isOpen}\n          fullWidth={true}\n          maxWidth=\"sm\"\n        >\n          <DialogTitle className={styles.center}>\n            加入 {product.name} 至購物車\n          </DialogTitle>\n          <Box className={[styles.row, styles.center]}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={quantity === 1}\n              onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\n            >\n              <RemoveIcon />\n            </Button>\n            <TextField\n              inputProps={{ className: styles.largeInput }}\n              InputProps={{\n                bar: true,\n                inputProps: {\n                  className: styles.largeInput,\n                },\n              }}\n              className={styles.largeNumber}\n              type=\"number\"\n              variant=\"filled\"\n              min={1}\n              value={quantity}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => setQuantity(quantity + 1)}\n            >\n              <AddIcon />\n            </Button>\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={cancelOrRemoveFromOrder}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              {orderItems.find((x) => x.name === product.name)\n                ? '移除該物品'\n                : '取消'}\n            </Button>\n\n            <Button\n              onClick={addToOrderHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              加入購物車\n            </Button>\n          </Box>\n        </Dialog>\n\n        <Grid container>\n          <Grid item md={2}>\n            <List>\n              {loading ? (\n                <CircularProgress />\n              ) : error ? (\n                <Alert severity=\"error\">{error}</Alert>\n              ) : (\n                <>\n                  <ListItem button onClick={() => categoryClickHandler('')}>\n                    <Logo></Logo>\n                  </ListItem>\n                  {categories.map((category) => (\n                    <ListItem\n                      key={category.name}\n                      button\n                      onClick={() => categoryClickHandler(category.name)}\n                    >\n                      {category.name}\n                      <Avatar alt={category.name} src={category.image} />\n                    </ListItem>\n                  ))}\n                </>\n              )}\n            </List>\n          </Grid>\n          <Grid item md={10}>\n            <Typography\n              gutterBottom\n              className={styles.title}\n              variant=\"h2\"\n              component=\"h2\"\n            >\n              {categoryName || '裕豪小館'}\n            </Typography>\n\n            <Grid container spacing={1}>\n              {loadingProducts ? (\n                <CircularProgress />\n              ) : errorProducts ? (\n                <Alert severity=\"error\">{errorProducts}</Alert>\n              ) : (\n                products.map((product) => (\n                  <Slide key={product.name} direction=\"up\" in={true}>\n                    <Grid item md={6}>\n                      <Card\n                        className={styles.card}\n                        onClick={() => productClickHandler(product)}\n                      >\n                        <CardActionArea>\n                          <CardMedia\n                            component=\"img\"\n                            alt={product.name}\n                            image={product.image}\n                            className={styles.media}\n                          />\n                          <CardContent>\n                            <Typography\n                              gutterBottom\n                              variant=\"body2\"\n                              color=\"textPrimary\"\n                              component=\"p\"\n                            >\n                              {product.name}\n                            </Typography>\n                            <Box className={styles.cardFooter}>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                component=\"p\"\n                              >\n                              </Typography>\n                              <Typography\n                                variant=\"body2\"\n                                color=\"textPrimary\"\n                                component=\"p\"\n                              >\n                                ${product.price}\n                              </Typography>\n                            </Box>\n                          </CardContent>\n                        </CardActionArea>\n                      </Card>\n                    </Grid>\n                  </Slide>\n                ))\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n      <Box>\n        <Box>\n          <Box className={[styles.bordered, styles.space]} variant=\"h1\" component=\"h1\">\n            我的訂單 - {orderType === \"Eat in\" ? \"堂食\" : \"外帶\"} | 總共: ${totalPrice} |\n            購物車: {itemsCount}件\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={() => {\n                clearOrder(dispatch);\n                props.history.push(`/`);\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.largeButton}\n            >\n              取消訂單\n            </Button>\n\n            <Button\n              onClick={previewOrderHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={orderItems.length === 0}\n              className={styles.largeButton}\n            >\n              購物單\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { listQueue } from '../actions';\nimport {\n  Box,\n  CircularProgress,\n  Grid,\n  List,\n  ListItem,\n  Paper,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport { Alert } from '@material-ui/lab';\nimport { Helmet } from 'react-helmet';\nexport default function QueueScreen(props) {\n  const styles = useStyles();\n\n  const { state, dispatch } = useContext(Store);\n  const { queue, loading, error } = state.queueList;\n\n  useEffect(() => {\n    listQueue(dispatch);\n  }, []);\n\n  return (\n    <Box className={[styles.root]}>\n      <Helmet>\n        <title>Queue</title>\n      </Helmet>\n      <Box className={[styles.main]}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <Grid container spacing={2}>\n            <Grid item md={6}>\n              <Paper>\n                <h1 className={styles.processing}>In Progress</h1>\n                <List>\n                  {queue.inProgressOrders.map((order) => (\n                    <ListItem key={order.number}>\n                      <h1>{order.number}</h1>\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Grid>\n            <Grid item md={6}>\n              <Paper>\n                <h1 className={styles.ready}>Now Serving </h1>\n                <List>\n                  {queue.servingOrders.map((order) => (\n                    <ListItem key={order.number}>\n                      <h1>{order.number}</h1>\n                    </ListItem>\n                  ))}\n                </List>\n              </Paper>\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Store } from '../Store';\nimport { addToOrder, removeFromOrder } from '../actions';\nimport {\n  Box,\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  Dialog,\n  DialogTitle,\n  Grid,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nexport default function ReviewScreen(props) {\n  const styles = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const {\n    orderItems,\n    itemsCount,\n    totalPrice,\n    taxPrice,\n    orderType,\n  } = state.order;\n  const [quantity, setQuantity] = useState(1);\n  const [isOpen, setIsOpen] = useState(false);\n  const [product, setProduct] = useState({});\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  const productClickHandler = (p) => {\n    setProduct(p);\n    setIsOpen(true);\n  };\n  const addToOrderHandler = () => {\n    addToOrder(dispatch, { ...product, quantity });\n    setIsOpen(false);\n  };\n  const cancelOrRemoveFromOrder = () => {\n    removeFromOrder(dispatch, product);\n    setIsOpen(false);\n  };\n  const procedToCheckoutHandler = () => {\n    // procedToCheckout(dispatch);\n    props.history.push('/complete');\n  };\n  useEffect(() => {}, []);\n\n  return (\n    <Box className={[styles.root]}>\n      <Box className={[styles.main, styles.navy, styles.center]}>\n        <Dialog\n          onClose={closeHandler}\n          aria-labelledby=\"max-width-dialog-title\"\n          open={isOpen}\n          fullWidth={true}\n          maxWidth=\"sm\"\n        >\n          <DialogTitle className={styles.center}>\n            編輯 {product.name}\n          </DialogTitle>\n          <Box className={[styles.row, styles.center]}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={quantity === 1}\n              onClick={(e) => quantity > 1 && setQuantity(quantity - 1)}\n            >\n              <RemoveIcon />\n            </Button>\n            <TextField\n              inputProps={{ className: styles.largeInput }}\n              className={styles.largeNumber}\n              type=\"number\"\n              min={1}\n              variant=\"filled\"\n              value={quantity}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={(e) => setQuantity(quantity + 1)}\n            >\n              <AddIcon />\n            </Button>\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={cancelOrRemoveFromOrder}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              {orderItems.find((x) => x.name === product.name)\n                ? '移除'\n                : '取消'}\n            </Button>\n\n            <Button\n              onClick={addToOrderHandler}\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={styles.largeButton}\n            >\n              確定\n            </Button>\n          </Box>\n        </Dialog>\n        <Box className={[styles.center, styles.column]}>\n          <Logo large></Logo>\n          <Typography\n            gutterBottom\n            className={styles.title}\n            variant=\"h3\"\n            component=\"h3\"\n          >\n            您的{orderType === \"Eat in\" ? \"堂食\" : \"外帶\"}訂單\n          </Typography>\n        </Box>\n\n        <Grid container>\n          {orderItems.map((orderItem) => (\n            <Grid item md={12} key={orderItem.name}>\n              <Card\n                className={styles.card}\n                onClick={() => productClickHandler(orderItem)}\n              >\n                <CardActionArea>\n                  <CardContent>\n                    <Box className={[styles.row, styles.between]}>\n                      <Typography\n                        gutterBottom\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                        component=\"p\"\n                      >\n                        {orderItem.name}\n                      </Typography>\n                      <Button variant=\"contained\">編輯</Button>\n                    </Box>\n\n                    <Box className={[styles.row, styles.between]}>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                        component=\"p\"\n                      >\n                        總共:\n                      </Typography>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"textPrimary\"\n                        component=\"p\"\n                      >\n                       x {orderItem.quantity}\n                      </Typography>\n                    </Box>\n                  </CardContent>\n                </CardActionArea>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n      <Box>\n        <Box>\n          <Box className={[styles.bordered, styles.space]} variant=\"h1\" component=\"h1\">\n          我的訂單 - {orderType === \"Eat in\" ? \"堂食\" : \"外帶\"} | 總共: ${totalPrice} |\n            購物車: {itemsCount}件\n          </Box>\n          <Box className={[styles.row, styles.around]}>\n            <Button\n              onClick={() => {\n                props.history.push(`/order`);\n              }}\n              variant=\"contained\"\n              color=\"primary\"\n              className={styles.largeButton}\n            >\n              退回菜單\n            </Button>\n\n            <Button\n              onClick={procedToCheckoutHandler}\n              variant=\"contained\"\n              color=\"secondary\"\n              disabled={orderItems.length === 0}\n              className={styles.largeButton}\n            >\n              準備下單\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, Button, CircularProgress, Typography } from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nexport default function CompleteOrderScreen(props) {\n  const styles = useStyles();\n\n  return (\n    <Box className={[styles.root, styles.navy]}>\n      <Box className={[styles.main, styles.center]}>\n        <Box>\n          <Logo large></Logo>\n          <Typography\n            gutterBottom\n            className={styles.title}\n            variant=\"h3\"\n            component=\"h3\"\n          >\n            Please follow the instruction on the PIN pad\n          </Typography>\n          <CircularProgress />\n        </Box>\n      </Box>\n      <Box className={[styles.center, styles.space]}>\n        <Button\n          onClick={() => props.history.push('/complete')}\n          variant=\"contained\"\n          color=\"primary\"\n          className={styles.largeButton}\n        >\n          Complete Order\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Store } from '../Store';\nimport { listOrders } from '../actions';\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport { Alert } from '@material-ui/lab';\nimport Axios from 'axios';\nimport { Helmet } from 'react-helmet';\nexport default function AdminScreen(props) {\n  const styles = useStyles();\n\n  const { state, dispatch } = useContext(Store);\n  const { orders, loading, error } = state.orderList;\n  const setOrderStateHandler = async (order, action) => {\n    try {\n      await Axios.put('/api/orders/' + order._id, {\n        action: action,\n      });\n      listOrders(dispatch);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  useEffect(() => {\n    listOrders(dispatch);\n  }, []);\n\n  return (\n    <Box className={[styles.root]}>\n      <Helmet>\n        <title>Admin Orders</title>\n      </Helmet>\n\n      <Box className={[styles.main]}>\n        {loading ? (\n          <CircularProgress />\n        ) : error ? (\n          <Alert severity=\"error\">{error}</Alert>\n        ) : (\n          <TableContainer component={Paper}>\n            <Table aria-label=\"Orders\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>編號</TableCell>\n                  <TableCell align=\"right\">價錢&nbsp;($)</TableCell>\n                  <TableCell align=\"right\">數量</TableCell>\n                  <TableCell align=\"right\">物品</TableCell>\n                  <TableCell align=\"right\">取餐方式</TableCell>\n                  <TableCell align=\"right\">付款方式</TableCell>\n                  <TableCell align=\"right\">狀態</TableCell>\n                  <TableCell align=\"right\">動作</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders.map((order) => (\n                  <TableRow key={order.name}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {order.number}\n                    </TableCell>\n                    <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                    <TableCell align=\"right\">\n                      {order.orderItems.length}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      {order.orderItems.map((item) => (\n                        <Box>\n                          {item.name} x {item.quantity}\n                        </Box>\n                      ))}\n                    </TableCell>\n                    <TableCell align=\"right\">{order.orderType == \"Eat in\" ? \"堂食\":\"外帶\"}</TableCell>\n                    <TableCell align=\"right\">{order.paymentType == \"Pay here\" ? \"現場付款\" : \"現場付款\"}</TableCell>\n                    <TableCell align=\"right\">\n                      {order.inProgress\n                        ? '進行中'\n                        : order.isReady\n                        ? '可送餐'\n                        : order.isDelivered\n                        ? '已送餐'\n                        : '未知'}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'ready')}\n                        color=\"secondary\"\n                      >\n                        準備好了\n                      </Button>\n                      <p/>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'cancel')}\n                      >\n                        取消訂單\n                      </Button>\n                      <p/>\n                      <Button\n                        variant=\"contained\"\n                        onClick={() => setOrderStateHandler(order, 'deliver')}\n                      >\n                        完成\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport {\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nimport { setPaymentType } from '../actions';\nimport { Store } from '../Store';\nexport default function HomeScreen(props) {\n  const { dispatch } = useContext(Store);\n  const styles = useStyles();\n  const selectHandler = (paymentType) => {\n    setPaymentType(dispatch, paymentType);\n    if (paymentType === 'Pay here') {\n      props.history.push('/payment');\n    } else {\n      props.history.push('/complete');\n    }\n  };\n  return (\n    <Box className={[styles.root, styles.navy]}>\n      <Box className={[styles.main, styles.center]}>\n        <Logo large></Logo>\n        <Typography\n          className={styles.center}\n          gutterBottom\n          variant=\"h3\"\n          component=\"h3\"\n        >\n          Select payment type\n        </Typography>\n        <Box className={styles.cards}>\n          <Card className={[styles.card, styles.space]}>\n            <CardActionArea onClick={() => selectHandler('Pay here')}>\n              <CardMedia\n                component=\"img\"\n                alt=\"Pay here\"\n                image=\"/images/payhere.png\"\n                className={styles.media}\n              />\n              <CardContent>\n                <Typography\n                  gutterBottom\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  component=\"p\"\n                >\n                  PAY HERE\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n          <Card className={[styles.card, styles.space]}>\n            <CardActionArea onClick={() => selectHandler('At counter')}>\n              <CardMedia\n                component=\"img\"\n                alt=\"At counter\"\n                image=\"/images/atcounter.png\"\n                className={styles.media}\n              />\n              <CardContent>\n                <Typography\n                  gutterBottom\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  component=\"p\"\n                >\n                  AT COUNTER\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n          </Card>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Box, Button, CircularProgress, Typography } from '@material-ui/core';\nimport { useStyles } from '../styles';\nimport Logo from '../components/Logo';\nimport { Store } from '../Store';\nimport { Alert } from '@material-ui/lab';\nimport { createOrder } from '../actions';\nexport default function CompleteOrderScreen(props) {\n  var QRCode = require('qrcode.react');\n  \n  const styles = useStyles();\n  const { state, dispatch } = useContext(Store);\n  const { order } = state;\n  const { loading, error, newOrder } = state.orderCreate;\n\n  useEffect(() => {\n    if (order.orderItems.length > 0) {\n      createOrder(dispatch, order);\n    }\n  }, [order]);\n\n  return (\n    <Box className={[styles.root, styles.navy]}>\n      <Box className={[styles.main, styles.center]}>\n        <Box>\n          <Logo large></Logo>\n          {loading ? (\n            <CircularProgress></CircularProgress>\n          ) : error ? (\n            <Alert severity=\"error\">{error}</Alert>\n          ) : (\n            <>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h3\"\n                component=\"h3\"\n              >\n                請至收銀台掃瞄\n              </Typography>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h1\"\n                component=\"h1\"\n              >\n                Thank you!\n              </Typography>\n              <Typography\n                gutterBottom\n                className={styles.title}\n                variant=\"h3\"\n                component=\"h3\"\n              >\n                \n              </Typography>\n              <QRCode value={(newOrder.number).toString()} size={400}/>\n            </>\n          )}\n        </Box>\n      </Box>\n      <Box className={[styles.center, styles.space]}>\n        <Button\n          onClick={() => props.history.push('/')}\n          variant=\"contained\"\n          color=\"primary\"\n          className={styles.largeButton}\n        >\n          重新下單\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Container,\n  CssBaseline,\n  Paper,\n  ThemeProvider,\n} from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { Store } from './Store';\nimport { Route, BrowserRouter } from 'react-router-dom';\nimport ChooseScreen from './screens/ChooseScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport QueueScreen from './screens/QueueScreen';\nimport { createMuiTheme } from '@material-ui/core';\nimport ReviewScreen from './screens/ReviewScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport AdminScreen from './screens/AdminScreen';\nimport SelectPaymentScreen from './screens/SelectPaymentScreen';\nimport CompleteOrderScreen from './screens/CompleteOrderScreen';\nimport { Helmet } from 'react-helmet';\n\nconst theme = createMuiTheme({\n  typography: {\n    h1: { fontWeight: 'bold' },\n    h2: {\n      fontSize: '2rem',\n      color: 'black',\n    },\n    h3: {\n      fontSize: '1.8rem',\n      fontWeight: 'bold',\n      color: 'white',\n    },\n  },\n  palette: {\n    primary: { main: '#ff1744' },\n    secondary: {\n      main: '#118e16',\n      contrastText: '#ffffff',\n    },\n  },\n});\nfunction App() {\n  const { state } = useContext(Store);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Helmet>\n        <title>Order</title>\n      </Helmet>\n\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth={state.widthScreen ? 'lg' : 'sm'}>\n          <Paper>\n            <Route path=\"/\" component={HomeScreen} exact></Route>\n            <Route path=\"/admin\" component={AdminScreen} exact></Route>\n            <Route path=\"/queue\" component={QueueScreen} exact></Route>\n            <Route path=\"/choose\" component={ChooseScreen} exact></Route>\n            <Route path=\"/order\" component={OrderScreen} exact></Route>\n            <Route path=\"/review\" component={ReviewScreen} exact></Route>\n            <Route\n              path=\"/select-payment\"\n              component={SelectPaymentScreen}\n              exact\n            ></Route>\n            <Route path=\"/payment\" component={PaymentScreen} exact></Route>\n            <Route\n              path=\"/complete\"\n              component={CompleteOrderScreen}\n              exact\n            ></Route>\n          </Paper>\n        </Container>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n}\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport { StoreProvider } from './Store';\nconst container = document.getElementById('root');\nrender(\n  <StoreProvider>\n    <App></App>\n  </StoreProvider>,\n  container\n);\n"],"sourceRoot":""}